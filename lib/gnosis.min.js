/**
 * gnosis - A utility to traverse an object and execute a callback to transform the object, etc.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.3.0
 * Url: https://github.com/ifandelse/gnosis
 * License(s): MIT
 */
(function(e,t){"object"==typeof module&&module.exports?module.exports=function(){return t()}:"function"==typeof define&&define.amd?define([],function(){return t(e)}):e.gnosis=t(e)})(this,function(e,t){function r(e,t,r,o){for(var n=1,a=t.split("."),s=a.length,_=s-1,i=e;s>n;)n!==_?i=i[a[n]]:o?o(i[a[n]],r):i[a[n]]=r,n+=1}function o(e,r){var o=Object.getPrototypeOf(e);return-1!==r.indexOf(o)?t:o}function n(e,t,r,a,s,f,p,u){u=u||e,e&&(r.nonEnumerable?Object.getOwnPropertyNames(e):Object.keys(e)).forEach(function(o){if(-1===i.indexOf(o)){var c=t+"."+o;try{var l,g=Object.getOwnPropertyDescriptor(e,o),d=Object.prototype.toString.call(e[o]);s.hasOwnProperty(c)&&s[c].type===d||(l=s[c]={source:e,name:o,descriptor:g,path:c,level:a,type:d},f(u,o,e[o],l,p),-1!==_.indexOf(d)&&n(e[o],c,r,a,s,f,p))}catch(y){console.log(y)}}}),e&&r.walkPrototype&&(proto=o(e,r.dontwalk||c))&&n(proto,t,r,a+1,s,f,p,e)}function a(e,t,r,o,a,s){return r=r||"{ROOT}",o=o||{},a=a||0,s=s||{},n(e,r,o,a,s,t,e),o.trackState&&!e.__gnosis__&&(Object.defineProperty(e,"__gnosis__",{enumerable:!1,writeable:!0,value:{meta:s}}),e.__gnosis__.args=Array.prototype.slice.call(arguments,0)),s}function s(e){var t=e.__gnosis__;if(t&&t.args)return a(t.args[0],t.args[1],t.args[2],t.args[3],t.args[4],t.meta);throw new Error("Cannot perform a diff traversal on an object that does not have __gnosis__ args and meta.")}var _=["[object Object]","[object Array]"],i=["__gnosis__","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","__proto__","constructor","isPrototypeOf","hasOwnProperty","propertyIsEnumerable","valueOf","toString","toLocaleString"],c=[];return{dontwalk:c,depthNodes:_,exclusion:i,setValFromPath:r,traverse:a,traverseDiff:s}});