/**
 * gnosis - A utility to traverse an object and execute a callback to transform the object, etc.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.0.2
 * Url: https://github.com/ifandelse/gnosis
 * License(s): MIT
 */
(function(r,t){"object"==typeof module&&module.exports?module.exports=function(){return t()}:"function"==typeof define&&define.amd?define([],function(){return t(r)}):r.gnosis=t(r)})(this,function(){var r=function(r,o){var e=[],n=t(r);if(o.ownProps)e=Object.keys(r);else for(var a in r)e.push(a);return"array"===n&&o.arrayProps.length?e=e.concat(o.arrayProps):"object"===n&&o.objectProps.length&&(e=e.concat(o.objectProps)),e},t=function(r){var t=Object.prototype.toString.call(r);return t.substring(8,t.length-1).toLowerCase()},o={traversable:function(r,t,o,n,a,s){var c=r[t];n(r,t,c,o,s),e(c,n,a,s)},simple:function(r,t,o,e,n,a){e(r,t,r[t],o,a)}},e=function n(e,a,s,c){3===arguments.length&&"[object Array]"===Object.prototype.toString.call(s)&&(c=s,s={}),s=s||{},c=c||["{ROOT}"],s.arrayProps=s.arrayProps||n.arrayProps,s.objectProps=s.objectProps||n.objectProps;for(var p,i,u,f=r(e,s),l=0;l<f.length;)u=f[l],p=e[u],i=t(p),o["array"!==i&&"object"!==i?"simple":"traversable"](e,u,i,a,s,c.concat([u])),l+=1};return e.arrayProps=["push","pop","shift","unshift"],e.objectProps=[],e.getType=t,{traverse:e}});