/**
 * gnosis - A utility to traverse an object and execute a callback to transform the object, etc.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.3.0
 * Url: https://github.com/ifandelse/gnosis
 * License(s): MIT
 */
(function(e,t){"object"==typeof module&&module.exports?module.exports=function(){return t()}:"function"==typeof define&&define.amd?define([],function(){return t(e)}):e.gnosis=t(e)})(this,function(){function e(e,t,r,o){for(var n=1,a=t.split("."),s=a.length,_=s-1,i=e;s>n;)n!==_?i=i[a[n]]:o?o(i[a[n]],r):i[a[n]]=r,n+=1}function t(e,r,o,s,_,i,c,f){f=f||e,e&&(o.nonEnumerable?Object.getOwnPropertyNames(e):Object.keys(e)).forEach(function(p){if(-1===a.indexOf(p)){var u=r+"."+p;try{var l,g=Object.getOwnPropertyDescriptor(e,p),y=Object.prototype.toString.call(e[p]);_.hasOwnProperty(u)&&_[u].type===y||(l=_[u]={source:e,name:p,descriptor:g,path:u,level:s,type:y},i(f,p,e[p],l,c),-1!==n.indexOf(y)&&t(e[p],u,o,s,_,i,c))}catch(d){console.log(d)}}}),e&&o.walkPrototype&&t(Object.getPrototypeOf(e),r,o,s+1,_,i,c,e)}function r(e,r,o,n,a,s){return o=o||"{ROOT}",n=n||{},a=a||0,s=s||{},t(e,o,n,a,s,r,e),n.trackState&&!e.__gnosis__&&(Object.defineProperty(e,"__gnosis__",{enumerable:!1,writeable:!0,value:{meta:s}}),e.__gnosis__.args=Array.prototype.slice.call(arguments,0)),s}function o(e){var t=e.__gnosis__;if(t&&t.args)return r(t.args[0],t.args[1],t.args[2],t.args[3],t.args[4],t.meta);throw new Error("Cannot perform a diff traversal on an object that does not have __gnosis__ args and meta.")}var n=["[object Object]","[object Array]"],a=["__gnosis__","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","__proto__","constructor","isPrototypeOf","hasOwnProperty","propertyIsEnumerable","valueOf","toString","toLocaleString"];return{depthNodes:n,exclusion:a,traverse:r,traverseDiff:o,setValFromPath:e}});