/**
 * gnosis - A utility to traverse an object and execute a callback to transform the object, etc.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.0.1
 * Url: https://github.com/ifandelse/gnosis
 * License(s): MIT
 */
(function(r,o){"object"==typeof module&&module.exports?module.exports=function(){return o()}:"function"==typeof define&&define.amd?define([],function(){return o(r)}):r.gnosis=o(r)})(this,function(){var r=function(r,e){var t=[],n=o(r);if(e.ownProps)t=Object.keys(r);else for(var a in r)t.push(a);return"array"===n&&e.arrayProps.length?t=t.concat(e.arrayProps):"object"===n&&e.objectProps.length&&(t=t.concat(e.objectProps)),t},o=function(r){var o=Object.prototype.toString.call(r);return o.substring(8,o.length-1).toLowerCase()},e={traversable:function(r,o,e,n,a){var s=r[o];n(r,o,s,e),t(s,n,a)},simple:function(r,o,e,t){t(r,o,r[o],e)}},t=function n(t,a,s){s=s||{},s.arrayProps=s.arrayProps||n.arrayProps,s.objectProps=s.objectProps||n.objectProps;for(var c,p,i,u=r(t,s),f=0;f<u.length;)i=u[f],c=t[i],p=o(c),e["array"!==p&&"object"!==p?"simple":"traversable"](t,i,p,a,s),f+=1};return t.arrayProps=["push","pop","shift","unshift"],t.objectProps=[],t.getType=o,{traverse:t}});